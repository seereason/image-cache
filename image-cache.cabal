Name:           image-cache
Version:        0.13
License:        AllRightsReserved
Copyright:      (c) 2014, SeeReason Partners LLC
Author:         David Fox <dsf@seereason.com>
Maintainer:     David Fox <dsf@seereason.com>
Homepage:       http://src.seereason.com/image-cache
Synopsis:       Support for image file processing and caching
Cabal-version:  >= 1.8
build-type:     Simple
description:
  This package includes the following modules, from higher to lower level functionality:
  .
  * "Appraisal.ImageCache" - Maintain a cache of images, consisting of a map from an @ImageKey@ to an
    @Imagefile@.  An 'Appraisal.ImageCache.ImageKey' describes how the image has been modified from
    its original form - any combination of cropped, scaled, and uprighted.  The @build@ method of
    the @MonadCache@ instance builds a new image file and inserts it into the map given the
    @ImageKey@ describing the desired modifications.
  .
  * "Appraisal.Cache" - Code to maintain a generalized cache - a Map from keys to values that is
    made persistant using acid-state.  The @MonadCache@ class has a @build@ method that is passed
    a key and either looks up a cache value or creates a new one if not present.
  .
  * "Appraisal.ImageFile" - The 'ImageFile' type describing the file containing the image - its
    location and meta data.  Functions to create an 'ImageFile' from a file, a bytestring, or by
    modifying another 'ImageFile'.  Functions to query or modify an existing 'ImageFile' -
    e.g. turn it upright using the EXIF orientation code.
  .
  * "Appraisal.File" - Maintain a file cache - a persistant bytestring associated with a name.  The
    name of the files in this cache are equivalent to the file's checksum.  This allows easy
    exclusion of duplicates.  Functions are provided to create a file from an existing 'FilePath',
    or by downloading a 'URI', capturing a command's output, or saving a 'ByteString'.
  .
  * "Appraisal.Image" - data structures describing how an image should
    appear on the page.  This includes its size, how it is cropped and scaled,
    and functions to perform conversions amongst these data structures.
  .
  * "Appraisal.Exif" - use the EXIF orientation code in a JPEG file to normalize its orientation.
    This code is set when the JPEG is create by a camera's orientation sensor.

source-repository head
  type:     git
  location: https://github.com/seereason/image-cache

flag pretty-112
  Description: The prettyclass package is included in pretty-1.1.2
  Default: True

Library
  Hs-Source-Dirs: .
  GHC-Options: -Wall -Wredundant-constraints -fno-warn-name-shadowing -O
  -- CPP-Options: -DLAZYIMAGES
  Extensions: CPP, DataKinds
  Exposed-modules:
    Appraisal.AcidCache
    Appraisal.FileCache
    Appraisal.Image
    Appraisal.ImageCache
    Appraisal.FileCacheT
    Appraisal.FileError
    Appraisal.Exif
    Appraisal.LogException
    Appraisal.Utils.ErrorWithIO
  Build-Depends:
    base >= 4,
    binary,
    bytestring,
    cereal,
    containers,
    data-default,
    directory,
    exceptions,
    filepath,
    hslogger,
    lens,
    lens-path,
    mtl,
    network-uri,
    parsec,
    pretty >= 1.1.2,
    pureMD5,
    regex-tdfa,
    regex-compat-tdfa,
    safecopy >= 0.9.4.4,
    sr-extra >= 1.58,
    syb,
    template-haskell,
    text,
    th-lift,
    th-orphans >= 0.9,
    transformers,
    unix,
    Unixutils
  if !impl(ghcjs)
    Build-Depends:
      acid-state,
      filemanip-extra,
      HUnit,
      process >= 1.4.3,
      process-extras >= 0.7,
      QuickCheck,
      utf8-string
  else
    Build-Depends: Cabal

test-suite image-cache-tests
  type: exitcode-stdio-1.0
  Hs-Source-Dirs: Tests
  Main-Is: Main.hs
  Other-Modules: Cache Exif LaTeX
  Build-Depends:
    acid-state,
    base >= 4,
    binary,
    bytestring,
    containers,
    directory,
    either,
    exceptions,
    filepath,
    HaTeX,
    HUnit,
    image-cache,
    mtl,
    text
  if !impl(ghcjs)
    Build-Depends:
      filemanip-extra
